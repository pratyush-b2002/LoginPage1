package com.example.loginpage1

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import androidx.activity.compose.setContent
import androidx.appcompat.app.AppCompatActivity
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.text.BasicTextField
import androidx.compose.foundation.text.KeyboardActions
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.focus.FocusRequester
import androidx.compose.ui.graphics.BlendMode.Companion.Color
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.painter.Painter
import androidx.compose.ui.platform.*
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.input.ImeAction
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.material3.MaterialTheme
import androidx.compose.ui.graphics.BlendMode
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Shape

private val BlendMode.LightGray: BlendMode
    @Composable
    get() {
        return BlendMode.Lighten
    }

val ColorScheme.primaryVariant: Color
    @Composable
    get() {
        return rememberUpdatedState(this).value.primaryVariant
    }




class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            LoginPage()
        }
    }
}

@OptIn(ExperimentalMaterial3Api::class)
@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
@Composable
fun LoginPage() {
    var username by remember { mutableStateOf("") }
    var password by remember { mutableStateOf("") }

    val focusRequesterForPassword = remember { FocusRequester() }
    val primaryVariantColor = MaterialTheme.colorScheme.primaryVariant




    Scaffold(
        content = {
            Column(
                modifier = Modifier
                    .fillMaxSize()
                    .padding(16.dp)
            ) {
                Text(
                    text = "Login Form",
                    modifier = Modifier
                        .align(Alignment.CenterHorizontally)
                        .padding(16.dp),
                    fontSize = 24.sp,
                    fontWeight = FontWeight.Bold
                )
                Spacer(modifier = Modifier.height(16.dp))
                BasicTextField(
                    value = username,
                    onValueChange = { username = it },
                    keyboardOptions = KeyboardOptions(
                        imeAction = ImeAction.Next
                    ),
                    keyboardActions = KeyboardActions(
                        onNext = {
                            // Focus on the password field when "Next" is pressed
                            focusRequesterForPassword.requestFocus()
                        }
                    ),
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp)
                        .background(MaterialTheme.colorScheme.primaryVariant)
                        .padding(16.dp)
                )
                Spacer(modifier = Modifier.height(16.dp))
                BasicTextField(
                    value = password,
                    onValueChange = { password = it },
                    keyboardOptions = KeyboardOptions(
                        imeAction = ImeAction.Done
                    ),
                    keyboardActions = KeyboardActions(
                        onDone = {
                            // You can add login logic here
                        }
                    ),
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp)
                        .background(MaterialTheme.colorScheme.primaryVariant)
                        .padding(16.dp)

                )
                Spacer(modifier = Modifier.height(16.dp))
                Button(
                    onClick = {
                        // You can add login logic here
                    },
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp)
                ) {
                    Text(text = "Submit")
                }
                Spacer(modifier = Modifier.height(16.dp))
                Row(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp),
                    horizontalArrangement = Arrangement.SpaceAround
                ) {
                    LinkButtonWithImage(
                        text = "Amazon.com",
                        logo = painterResource(id = R.drawable.amazon),
                        url = "https://www.amazon.com",
                        activity = LocalView.current.context as Activity
                    )
                    LinkButtonWithImage(
                        text = "Samsung.com",
                        logo = painterResource(id = R.drawable.samsung),
                        url = "https://www.samsung.com",
                        activity = LocalView.current.context as Activity
                    )
                    LinkButtonWithImage(
                        text = "Zomato.com",
                        logo = painterResource(id = R.drawable.zomato),
                        url = "https://www.zomato.com",
                        activity = LocalView.current.context as Activity
                    )
                }
            }
        }
    )
}

@Composable
fun Modifier.background(
    color: Color,
    shape: Shape
): Modifier {
    return then(Modifier.background(color, shape))
}




@Composable
fun LinkButtonWithImage(
    text: String,
    logo: Painter,
    url: String,
    activity: Activity
) {
    Column(
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Image(
            painter = logo,
            contentDescription = null,
            modifier = Modifier.size(64.dp)
        )
        Spacer(modifier = Modifier.height(4.dp))
        val customBody2 = TextStyle(
            fontFamily = FontFamily.Default,
            fontWeight = FontWeight.Normal,
            fontSize = 16.sp
        )
        Text(
            text = text,
            style = customBody2,
            color = MaterialTheme.colorScheme.primary,
            modifier = Modifier.clickable {
                // Open the link when clicked
                val intent = Intent(Intent.ACTION_VIEW, Uri.parse(url))
                activity.startActivity(intent)

            }
        )
    }
}
